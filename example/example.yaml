apiVersion: v1
kind: ServiceAccount
metadata:
  name: sample-acc
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sample-role
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "watch", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: sample-rolebind
roleRef:
  kind: ClusterRole
  name: sample-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: sample-acc
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      shareProcessNamespace: true
      serviceAccountName: sample-acc
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/conf.d # mount nginx-conf volumn to /etc/nginx/conf.d/
          name: nginx-conf
        - mountPath: /usr/share/nginx/html # mount index.html volumn to /usr/share/nginx/html
          name: nginx-html
        - mountPath: /var/run
          name: var-run
      - name: sidecar
        image: vinhph2/sidecar
        volumeMounts:
        - mountPath: /etc/nginx/conf.d # mount nginx-conf volumn to /etc/nginx/conf.d/
          name: nginx-conf
        - mountPath: /usr/share/nginx/html # mount index.html volumn to /usr/share/nginx/html
          name: nginx-html
        - mountPath: /var/run
          name: var-run
        - mountPath: /etc/sidecar/config.yaml # mount config.yaml volumn to /etc/sidecar/config.yaml
          name: sidecar-conf
          subPath: config.yaml
        command:
          - /bin/bash
        args:
          - '-c'
          - sidecar -c /etc/sidecar/config.yaml
      volumes:
      - name: nginx-conf
        emptyDir: {}
      - name: nginx-html
        emptyDir: {}
      - name: var-run 
        emptyDir: {}
      - name: sidecar-conf
        configMap:
          name: sidecar-conf
          items:
            - key: config.yaml
              path: config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sidecar-conf
data:
  config.yaml: |
    resources:
    - labels:
      - name: app
        value: nginx
      - name: type
        value: nginx-conf
      path: "/etc/nginx/conf.d"
      type: configmap
      script_inlines: 
      - kill -s HUP $(cat /var/run/nginx.pid)
    - labels:
      - name: app
        value: nginx
      - name: type
        value: nginx-html
      path: "/usr/share/nginx/html"
      type: configmap
      script_inlines: 
      - kill -s HUP $(cat /var/run/nginx.pid)
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  labels: 
    app: nginx
    type: nginx-conf
data:
  nginx.conf: |
    server {
      listen       80;
      listen  [::]:80;
      server_name  localhost;
      location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
      }
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
          root   /usr/share/nginx/html;
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-html
  labels: 
    app: nginx
    type: nginx-html
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
    <title>Welcome to nginx!</title>
    <style>
        body {
            width: 35em;
            margin: 0 auto;
            font-family: Tahoma, Verdana, Arial, sans-serif;
        }
    </style>
    </head>
    <body>
    <h1>Welcome to nginx!</h1>
    <p>If you see this page, the nginx web server is successfully installed and
    working. Further configuration is required.</p>

    <p>For online documentation and support please refer to
    <a href="http://nginx.org/">nginx.org</a>.<br/>
    Commercial support is available at
    <a href="http://nginx.com/">nginx.com</a>.</p>

    <p><em>Thank you for using nginx.</em></p>
    </body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30001
  selector:
    app: nginx